/*
 * This file is part of the DITA Open Toolkit project.
 *
 * Copyright 2019 Jarno Elovirta
 *
 * See the accompanying LICENSE file for applicable license.
 */
plugins {
    id "com.diffplug.gradle.spotless" version "3.26.0"
}

apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'org.dita-ot'
version = '2.0.0'
description = """DITA Open Toolkit indexing plug-in."""

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}
dependencies {
    implementation group: 'org.apache.ant', name: 'ant', version: '1.10.14'
    implementation(group: 'com.google.guava', name: 'guava', version: '32.1.1-jre') {
        exclude group: 'org.checkerframework', module: 'checker-qual'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.google.guava', module: 'failureaccess'
        exclude group: 'com.google.guava', module: 'listenablefuture'
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
        exclude group: 'com.google.j2objc', module: 'j2objc-annotations'
    }
    implementation group: 'net.sf.saxon', name: 'Saxon-HE', version: '12.4'
    implementation group: 'com.ibm.icu', name: 'icu4j', version: '74.2'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.12'
    implementation group: 'org.dita-ot', name: 'dost', version: '4.0.1'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.xmlunit', name: 'xmlunit-core', version: '2.6.3'
    testImplementation group: 'org.xmlunit', name: 'xmlunit-matchers', version: '2.6.3'
}

sourceSets {
    main {
        resources {
            exclude 'build.xml'
            exclude 'messages.xml'
            exclude 'plugin.xml'
        }
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = "UTF-8"

jar.setArchiveFileName "${project.name}.jar"

task copyInstall(type: Copy) {
    from(tasks.jar.outputs.files)
    destinationDir = file("lib")
}

task dist(type: Zip) {
    from(tasks.jar.outputs.files) {
        into "lib"
    }
    from("src/main/resources") {
        include "plugin.xml"
        expand(
                version: project.version,
                jar: jar.archiveName
        )
    }
    from("src/main/resources") {
        include "build.xml"
        include "index/*"
        include "messages.xml"
    }
    from(".") {
        include "LICENSE"
    }
    archiveName "org.dita.${project.name}-${project.version}.zip"
}

spotless {
    java {
        googleJavaFormat()
    }
}
